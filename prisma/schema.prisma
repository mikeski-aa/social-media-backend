// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id  Int @id @default(autoincrement())
  email String @unique
  hash String 
  username String @unique
  profilePic String @default("https://res.cloudinary.com/dyev7n9en/image/upload/fl_preserve_transparency/v1726306408/person_1_ms0j5t.jpg?_s=public-apps")
  posts post[]
  comments comment[]
  friends user[] @relation("friends")
  friendOf user[] @relation("friends")
  reqOut request[] @relation("requester")
  reqIn request[] @relation("requestee")
  dateJoined DateTime @default(now())
  backgroundPic String @default("https://images.unsplash.com/photo-1579547621706-1a9c79d5c9f1")

}

model post {
  id Int @id @default(autoincrement())
  user user @relation(fields: [userId], references: [id])
  userId Int
  text String @db.VarChar(1000)
  imageUrl String?
  likes Int[]  @default([])
  postDate DateTime @default(now())
  comments comment[]
}

model comment {
  id Int @id @default(autoincrement())
  post post @relation(fields: [postId], references: [id])
  postId Int
  user user @relation(fields: [userId], references: [id])
  userId Int
  commentDate DateTime @default(now())
  text String
  likes Int[] @default([])
}

model request {
  id Int @id @default(autoincrement())
  requester user @relation("requester", fields: [requesterId], references: [id])
  requesterId Int 
  requestee user @relation("requestee", fields: [requesteeId], references: [id])
  requesteeId Int
  requestDate DateTime @default(now())

}